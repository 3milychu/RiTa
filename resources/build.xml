
<project name="RiTa" default="test" basedir="../">

	<property file="resources/build.properties" />

	<property name="project.src"  location="java"/>
	<property name="project.bin"  location="target/classes"/>
	<property name="project.dist" location="dist"/>
	<property name="dist.bin" location="dist/bin"/>
	<property name="project.lib" location="lib/java"/>
	<property name="project.examples" location="web/examples"/>
	<property name="p5.sketchbook" location="${user.home}/Documents/Processing"/>
	<property name="p5.libraries" location="${p5.sketchbook}/libraries/"/>

	<path id="classpath">
		<fileset dir="${project.lib}" includes="**/*.jar" excludes=""/>
	</path>

	<path id="quickdocs.classpath">
		<fileset dir="${project.lib}" includes="**/*.jar"/>
		<pathelement path="${project.bin}"/>
		<pathelement path="${project.src}"/>
	</path>

	<path id="test.classpath">
		<fileset dir="${project.lib}" includes="**/*.jar" excludes="core.jar"/>
		<pathelement path="${dist.bin}"/>
		<pathelement path="${project.dist}/${project.name}/src"/>
	</path>
	
	<path id="doc.classpath">
		<fileset dir="${project.lib}" includes="**/*.jar" />
		<pathelement path="${dist.bin}"/>
		<pathelement path="${project.dist}/${project.name}/src"/>
	</path>

	<fileset id="exampleFileSet" dir="${project.examples}">
		<exclude name="**/*README*"/>
		<exclude name="**/*.html"/>
		<exclude name="**/*.properties"/>
		<exclude name="**/*.xml"/>
		<exclude name="**/web-export/**"/>
		<exclude name="**/lib/**"/>
	</fileset>

	<property name="line" value="-----------------------------------------------------------------------" />

	<target name="compile" depends="create.structure" >

		<!-- Replaces version tag in RiTa.java -->
		<replace file="${project.dist}/${project.name}/src/rita/RiTa.java" token="##version##" value="${project.version}"/>

		<javac srcdir="${project.dist}/${project.name}/src"
		    excludes="**/test/sketches/**"
			destdir="${dist.bin}" 
			source="${java.target.version}" 
			target="${java.target.version}"
			includeantruntime="false"
			debug="true">
			<classpath refid="classpath" />
		</javac>

	</target>

	<target name="make.docs" depends="compile">
		<java classname="rita.docgen.DocGenerator" fork="true" dir="${basedir}">
			<arg value="web/reference/" />
			<classpath refid="doc.classpath"/>
		</java>
	</target>

	<target name="_quickdocs">
		<!-- dev: generates reference from current target/classes -->
		<java classname="rita.docgen.DocGenerator" fork="true" dir="${basedir}">
			<arg value="web/reference/" />
			<classpath refid="quickdocs.classpath"/>
		</java>
	</target>

	<target name="build" depends="test, generate.jars, make.docs">
		<copy todir="${project.dist}/${project.name}/reference">
			<fileset dir="web/reference"/>
		</copy>
		<delete dir="${dist.bin}"/>
		<antcall target="generate.zip" />
	</target>

	<target name="generate.zip">

		<zip destfile="${project.dist}/RiTa-${project.version}.zip"
  	       basedir="${project.dist}/"
  	       excludes="**/.DS_Store, *.jar, *.zip"
		/>
		
		<!--symlink link="${project.dist}/Current" resource="${project.website}" overwrite="true"/-->
		
	</target>

	<target name="generate.jars" depends="compile">

		<!--  copy all non-class files manually -->

		<copy todir="${dist.bin}/rita/wordnet">
			<fileset dir="${project.src}/rita/wordnet">
				<include name="*.xml"/>
				<include name="*.txt"/>
			</fileset>
		</copy>
		<copy todir="${dist.bin}/rita">
			<fileset dir="${project.src}/rita/">
				<include name="*.js"/>
				<include name="*.gif"/>
			</fileset>
		</copy>
		<copy todir="${dist.bin}">
			<fileset dir="${project.src}">
				<include name="*.properties"/>
			</fileset>
		</copy>

		<!--  YAML lib for Processing -->
		<copy file="${project.lib}/snakeyaml-1.15.jar" tofile="${project.dist}/${project.name}/library/snakeyaml-1.15.jar"/>

		<!-- full lib to latest -->
		<jar jarfile="${project.dist}/rita-${project.version}.jar" basedir="${dist.bin}">
			<exclude name="**/data/**" />
			<exclude name="**/test/**" />
			<exclude name="**/docgen/**" />
		</jar>

		<!-- rita pkg only -->
		<jar jarfile="${project.dist}/${project.name}/library/rita.jar" basedir="${dist.bin}">
			<include name="rita/*.*/" />
			<include name="*.properties/" />
			<exclude name="**/test/**" />
		</jar>

		<!-- support pkg only -->
		<jar jarfile="${project.dist}/${project.name}/library/rita.support.jar" basedir="${dist.bin}">
			<exclude name="data/**" />
			<exclude name="rita/*.*/" />
			<exclude name="*.properties/" />
			<exclude name="**/test/**" />
			<exclude name="**/docgen/**" />
		</jar>
		
	</target>
	
	<target name="_jars.to.p5" description="">
		
		<!-- dev: copies generated jars to local processing install -->

		<copy todir="${p5.libraries}/${project.name}/library">
			<fileset dir="${project.dist}/${project.name}/library"/>
		</copy>
	</target>

	<target name="create.structure" description="" depends="clean">

		<mkdir dir="${project.dist}" />
		<mkdir dir="${project.dist}/${project.name}" />
		<mkdir dir="${project.dist}/${project.name}/library" />
		<mkdir dir="${project.dist}/${project.name}/js" />
		<mkdir dir="${project.dist}/${project.name}/examples" />
		<mkdir dir="${project.dist}/${project.name}/reference" />
		<mkdir dir="${project.dist}/${project.name}/css" />
		<mkdir dir="${project.dist}/${project.name}/src" />
		<mkdir dir="${dist.bin}" />
		<mkdir dir="${dist.bin}/data" />

		<copy todir="${project.dist}/${project.name}/css">
			<fileset dir="web/css/">
				<include name="*.css"/>
			</fileset>
		</copy>

		<copy todir="${project.dist}/${project.name}/examples">
			<fileset refid="exampleFileSet"/>
		</copy>

		<copy todir="${project.dist}/${project.name}/src">
			<fileset dir="${project.src}">
				<exclude name="rita/test/sketches/**"/>
				<exclude name="**/data/**"/>
			</fileset>
		</copy>

		<copy todir="${dist.bin}/data">
			<fileset dir="${project.src}/data"/>
		</copy>

		<!--  antcall target="create.src.zip"/-->

	</target>

	<target name="clean" depends="info">

		<delete dir="${project.dist}"/>
		<!-- delete dir="${project.docs}"/>
		<delete dir="${project.build}"/-->

	</target>

	<target name="test-one" description="one" depends="info">

		<junit printsummary="yes" timeout="100000" haltonfailure="yes">
			<formatter usefile="false" type="plain"/>
			<classpath>
				<path refid="test.classpath"/>
			</classpath>
			<test name="rita.test.RiLexiconTest" outfile="reports/rita.test.TestOne">
			</test>
		</junit>

	</target>

	<target name="test" description="runs all java tests" depends="compile">

		<junit printsummary="yes" timeout="100000" haltonfailure="yes">

			<classpath>
				<path refid="test.classpath"/>
			</classpath>

			<formatter usefile="false" type="plain"/>

			<test name="rita.test.RiTaEventTest" outfile="reports/rita.test.RiTaEventTest">
			</test>
			<test name="rita.test.RiStringTest"  outfile="reports/rita.test.RiStringTest">
			</test>
			<test name="rita.test.RiTaTest"      outfile="reports/rita.test.RiTaTest">
			</test>
			<test name="rita.test.RiLexiconTest" outfile="reports/rita.test.RiLexiconTest">
			</test>
			<test name="rita.test.RiGrammarTest" outfile="reports/rita.test.RiGrammarTest">
			</test>
			<test name="rita.test.RiMarkovTest"  outfile="reports/rita.test.RiMarkovTest">
			</test>
		</junit>

	</target>

	<target name="test-wordnet" description="runs all wordnet tests" depends="info">

		<junit printsummary="yes" timeout="100000" haltonfailure="yes">

			<formatter usefile="false" type="plain"/>

			<classpath>
				<path refid="test.classpath"/>
			</classpath>

			<test name="rita.test.RiWordNetTest" outfile="reports/rita.test.RiWordNetTest">
			</test>
			<!--test name="rita.test.RiWordNetIteratorsTest"  haltonfailure="no" outfile="reports/rita.test.RiWordNetTest"></test-->

		</junit>

	</target>

	<target name="info">
		<echo>
${line}
Name:		${project.name} 
Version:		${project.version}
Java.Version:	${java.version}
${line}
		</echo>
	</target>

</project>